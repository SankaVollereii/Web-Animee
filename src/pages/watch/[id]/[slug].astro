---
export const prerender = false;
import Layout from "~/layouts/Layout.astro";
import Table from "~/components/ui/Table.astro";
import { fetchAnimeData } from "~/utils/api";

const { id, slug } = Astro.params;
const episode = Astro.url.searchParams.get("episode") ?? null;

// Validasi parameter
if (!id || !slug) {
    return new Response(null, { status: 404, statusText: "Not Found" });
}

// Ambil data anime
const res = await fetchAnimeData(id, slug);
if (!res) {
    return new Response(null, { status: 404, statusText: "Anime not found" });
}
const data = res;

let contentType = "Tidak Diketahui"; // Default
const countryDetail = data.results.details?.find(d => {
    return d.type === "Negara:";
});

if (countryDetail && countryDetail.data) {
    const country = countryDetail.data.toLowerCase();
    if (country.includes("jp") || country.includes("jepang")) {
        contentType = "Anime";
    } else if (country.includes("cn") || country.includes("china")) {
        contentType = "Donghua";
    } else if (country.includes("kr") || country.includes("korea")) {
        contentType = "Manhwa (Animasi Korea)";
    } else {
        contentType = "Animasi Lain";
    }
}

// Ekstrak data episode dengan aman. Pastikan properti 'episode' ada dan merupakan array.
// Gunakan array kosong sebagai fallback jika tidak ada data episode.
const episodes = data.results.episode || [];
const totalEp = episodes?.at(-1) ?? 1; // Mengambil episode terakhir, default 1 jika tidak ada
const isFinished = data.results.details && data.results.details[2]?.data?.includes("Selesai"); // Memeriksa status selesai

// Tentukan episode yang sedang diputar
// Jika ada parameter 'episode' di URL, gunakan itu.
// Jika tidak, jika anime sudah selesai dan ada episode, gunakan episode pertama.
// Jika belum selesai atau tidak ada episode, gunakan episode terakhir.
const currentEpisodeNumber = episode ? parseInt(episode) : (isFinished && episodes.length > 0 ? episodes[0] : totalEp);

---

<link rel="stylesheet" href="https://cdn.vidstack.io/player/theme.css" />
<link rel="stylesheet" href="https://cdn.vidstack.io/player/video.css" />

<Layout title={data.results.title} description={data.results.description || data.results.title}>
  {/* PERUBAHAN: container mx-auto px-0 default (tanpa padding horizontal di mobile kecil), lalu px-4 di sm ke atas */}
  <div class="container mx-auto px-0 py-4 sm:px-4 md:py-8">
    <div class="flex flex-col gap-6">

      {/* BLOCK 1: Video Player & Navigasi Episode */}
      {/* PERUBAHAN: p-0 default (tanpa padding), py-2 (padding vertikal), lalu p-2 di sm, p-4 di md */}
      <div class="bg-base-300 rounded-lg shadow-xl overflow-hidden px-0 py-2 sm:p-2 md:p-4">
        <p
          id="playerInfo"
          class="aspect-video skeleton flex flex-col items-center justify-center text-center text-base-content/80 text-sm md:text-lg mb-2"
        >
          Memuat video player...
          <span class="loading loading-spinner loading-md md:loading-lg mt-2 md:mt-4"></span>
        </p>
        <div
          id="player"
          data-poster={data.results.image}
          data-storage="player-storage"
          data-autoplay="true"
          data-playsinline
          class="aspect-video hidden rounded-md"
        >
        </div>
        
        {/* Input hidden episode berada di sini, dalam Layout dan sebelum skrip JS */}
        <input id="episode" type="hidden" value={currentEpisodeNumber} />

        {/* PERUBAHAN: mx-0 default, px-2 py-2 default. Lalu sm:mx-2 sm:px-2 sm:py-2, md:p-2 */}
        <div class="flex justify-between items-center mx-0 mt-4 px-2 py-2 bg-base-200 rounded-lg sm:mx-2 sm:p-2">
          <button id="prevEpisode" class="btn btn-sm btn-outline btn-primary">Prev</button>
          
          {/* TEKS "Episode [Nomor]" DENGAN ID "currentEp" (KEMBALI) */}
          <span id="currentEp" class="text-sm md:text-base text-base-content">Episode {currentEpisodeNumber}</span>

          <button id="nextEpisode" class="btn btn-sm btn-outline btn-primary">Next</button>
        </div>

        {/* KOTAK DAFTAR EPISODE - SEBAGAI SELECT BOX */}
        <div class="mt-4 md:mt-6 p-3 md:p-4 bg-base-200 rounded-lg">
          <h3 class="text-lg md:text-xl font-bold mb-3 md:mb-4 text-base-content">Daftar Episode</h3>
          <select id="episodeListSelect" class="select select-bordered select-sm md:select-md w-full bg-base-100 text-base-content">
            {episodes.length > 0 ? (
              episodes.map(ep => (
                <option value={ep} selected={ep == currentEpisodeNumber}>
                  Episode {ep}
                </option>
              ))
            ) : (
              <option value="" disabled>Tidak ada episode tersedia</option>
            )}
          </select>
        </div>
      </div>

      {/* BLOCK 3: Detail Anime & Sinopsis */}
      <div class="p-4 md:p-6 rounded-lg shadow-xl bg-base-300 w-full sm:w-auto sm:mx-0">
        <h1 class="text-xl sm:text-2xl md:text-3xl mb-4 md:mb-6 text-primary">{data.results.title}</h1>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 items-start mb-4 md:mb-6">
          {data.results.image && (
            <figure class="mb-4 md:mb-0 text-center w-full">
              <img
                src={data.results.image}
                alt={data.results.title}
                class="rounded-lg shadow-lg mx-auto max-h-48 sm:max-h-64 md:max-h-150 object-contain w-full"
              />
            </figure>
          )}

          <div>
            <Table data={data.results.details} />
          </div>
        </div>

        {/* SINPOSIS */}
        <h2 class="font-bold text-lg md:text-xl mt-4 md:mt-6 mb-2 text-base-content">Sinopsis:</h2>
        <p set:html={data.results.description || "Sinopsis tidak tersedia."} class="text-sm md:text-base text-base-content/90 leading-relaxed" />
        <p class="text-xs md:text-sm text-base-content/80 mt-1">
        Kategori: <span class="font-semibold">{contentType}</span>
        </p>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { initWatchPlayer } from "/src/scripts/watch.js";

  document.addEventListener("astro:after-swap", () => {
    initWatchPlayer();
  });
  
  initWatchPlayer();

  // --- JAVASCRIPT UNTUK MENANGANI SELECT BOX DAFTAR EPISODE ---
  const episodeListSelect = document.getElementById("episodeListSelect");

  if (episodeListSelect) {
    episodeListSelect.addEventListener("change", (event) => {
      const selectedEpisode = event.target.value;
      if (selectedEpisode) {
        // Arahkan pengguna ke URL episode yang dipilih
        const currentUrl = new URL(window.location.href);
        currentUrl.searchParams.set("episode", selectedEpisode);
        window.location.assign(currentUrl.toString());
      }
    });
  }
  // --- AKHIR JAVASCRIPT UNTUK SELECT BOX DAFTAR EPISODE ---
</script>